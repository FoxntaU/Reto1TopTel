syntax = "proto3";

package service;

// Mensaje para la solicitud de lookupID
message LookupIDRequest {
  int32 idNode = 1;  // ID del nodo a buscar
}

// Mensaje para la respuesta de lookupID
message LookupIDResponse {
  bool result = 1;           // Resultado para seguir buscando o no
  string address = 2;        // Dirección del nodo (como string)
}

// Servicio que expone el método lookupID
service Searchsucc {
  rpc LookupID (LookupIDRequest) returns (LookupIDResponse);
}

// Mensaje para la solicitud de JoinNode
message JoinRequest {
  string address = 1;  // Dirección del nodo que se quiere unir
}

// Mensaje para la respuesta de JoinNode
message JoinResponse {         
  string address = 1;  // Dirección del nodo existente que recibe la solicitud       
}

// Servicio que expone el método JoinNode
service Joinnode {
  rpc JoinNode (JoinRequest) returns (JoinResponse);
}

// Mensaje para la solicitud de updateTable
message UpdateTableRequest {
  // No contiene campos
}

// Mensaje para la respuesta de UpdateTable
message UpdateTableResponse {
  string address = 1;  // sucesor
}

// Servicio que expone el método UpdateTable
service Updatetable {
  rpc UpdateTable (UpdateTableRequest) returns (UpdateTableResponse);
}

// Mensaje para la solicitud de updateTable
message UploadMessageRequest {
  string message_name = 1;
  string message = 2;
}

// Mensaje para la respuesta de UploadMessage
message UploadMessageResponse {
  bool saved = 1;  // saved
}

// Servicio que expone el método UploadMessage
service UploadMessage {
  rpc UploadMessage (UploadMessageRequest) returns (UploadMessageResponse);
}

// Mensaje para la solicitud de updateTable
message DownloadMessageRequest {
  string message_name = 1;  
}

// Mensaje para la respuesta de DownloadMessage
message DownloadMessageResponse {
  string message = 1;
}

// Servicio que expone el método DownloadMessage
service DownloadMessage {
  rpc DownloadMessage (DownloadMessageRequest) returns (DownloadMessageResponse);
}
